buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "https://files.minecraftforge.net/maven"
        }
        maven {
            url = 'https://repo.spongepowered.org/maven'
        }
    }
    dependencies {
        classpath("com.anatawa12.forge:ForgeGradle:2.3-1.0.+") {
            changing = true
        }
        classpath 'org.spongepowered:mixingradle:0.6-SNAPSHOT'
    }
}

apply plugin: "net.minecraftforge.gradle.forge"
apply plugin: 'org.spongepowered.mixin'

group = 'noobanidus.mods.lootr'
version = '0.6.2'
archivesBaseName = 'lootr-1.12.2'

minecraft {
    version = project.forgeVersion
    runDir = "run"

    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = project.mcpVersion
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.

    clientJvmArgs += "-Dfml.coreMods.load=noobanidus.mods.lootr.LootrCore"
    clientRunArgs += "--username=LootrDev"
}

repositories {
    mavenCentral()
    maven {
        url "https://maven.cleanroommc.com"
    }
    maven {
        url "https://cursemaven.com"
    }
}

dependencies {
    deobfCompile ("zone.rong:mixinbooter:4.2")
    deobfProvided ("curse.maven:reccomplex-223150:2689602")
    deobfProvided ("curse.maven:ivtoolkit-224535:2443253")
    deobfProvided ("curse.maven:dimdoors-284876:3693025")
}
sourceSets {
    main {
        ext.refMap = 'mixins.lootr.refmap.json'
    }
}

jar {
    manifest {
        attributes([
                "FMLCorePluginContainsFMLMod": true,
                "FMLCorePlugin": 'noobanidus.mods.lootr.LootrCore',
                "ForceLoadAsMod": true,
                "FMLAT": "lootr_at.cfg"
        ])
    }
}


processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include "mcmod.info"

        // replace version and mcversion
        expand "version": project.version, "mcversion": project.minecraft.version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude "mcmod.info"
    }
}
